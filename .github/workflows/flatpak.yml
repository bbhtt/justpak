name: Build flatpak
run-name: >-
  Build ${{ github.event_name == 'repository_dispatch' && github.event.client_payload.app_id || github.event.inputs.app_id }}


on:
  workflow_dispatch:
    inputs:
      app_id:
        description: 'Application ID'
        required: true
        default: org.vim.Vim
      branch:
        description: 'Build branch (stable/beta/test)'
        required: true
        default: stable
      ref:
        description: 'Git reference'
        required: true
        default: master
      build_url:
        description: 'Build ID'
        required: true
        default: "0"
      runners:
        description: 'JSON array of runners (e.g. ["ubuntu-24.04","ubuntu-24.04-arm"])'
        required: true
        default: '["ubuntu-24.04"]'
      repo_token:
        description: 'Repository token'
        required: true
        default: foo
  repository_dispatch:
    types: [build-flatpak]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runner: ${{ github.event_name == 'repository_dispatch' && github.event.client_payload.runners || fromJSON(github.event.inputs.runners) }}
    name: Build flatpak (${{ matrix.runner }})
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Set variables from dispatch event
        if: github.event_name == 'repository_dispatch'
        run: |
          echo "APP_ID=${{ github.event.client_payload.app_id }}" >> $GITHUB_ENV
          echo "BRANCH=${{ github.event.client_payload.branch }}" >> $GITHUB_ENV
          echo "REPO=https://github.com/flathub/${{ github.event.client_payload.app_id }}" >> $GITHUB_ENV
          echo "REF=${{ github.event.client_payload.ref }}" >> $GITHUB_ENV
          echo "BUILD_URL=https://hub.flathub.org/api/v1/build/${{ github.event.client_payload.build_url }}" >> $GITHUB_ENV
          echo "::add-mask::${{ github.event.client_payload.repo_token }}"
          echo "REPO_TOKEN=${{ github.event.client_payload.repo_token }}" >> $GITHUB_ENV

      - name: Set variables from manual trigger
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "APP_ID=${{ github.event.inputs.app_id }}" >> $GITHUB_ENV
          echo "BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
          echo "REPO=https://github.com/flathub/${{ github.event.inputs.app_id }}" >> $GITHUB_ENV
          echo "REF=${{ github.event.inputs.ref }}" >> $GITHUB_ENV
          echo "BUILD_URL=https://hub.flathub.org/api/v1/build/${{ github.event.inputs.build_url }}" >> $GITHUB_ENV
          echo "::add-mask::${{ github.event.inputs.repo_token }}"
          echo "REPO_TOKEN=${{ github.event.inputs.repo_token }}" >> $GITHUB_ENV

      - name: Create work directory
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/work
          chmod 777 ${GITHUB_WORKSPACE}/work

      - name: Free up disk space
        run: |
          sudo rm -rf /opt/* /usr/local/.ghcup || true
          sudo rm -rf /swapfile || true
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet /usr/share/swift
          sudo rm -rf /usr/local/share/boost /usr/local/share/powershell
          sudo rm -rf /usr/lib/google-cloud-sdk /usr/lib/jvm
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

      - name: Download justfile
        run: |
          docker run --rm --privileged \
            --entrypoint="" \
            -v "${GITHUB_WORKSPACE}/work:/work" \
            -w /work \
            ghcr.io/flathub-infra/flatpak-builder-lint:latest \
            curl https://raw.githubusercontent.com/barthalion/justpak/refs/heads/main/justfile -o justfile

      - name: Checkout repository
        run: |
          docker run --rm --privileged \
            --entrypoint="" \
            -v "${GITHUB_WORKSPACE}/work:/work" \
            -w /work \
            -e REPO \
            -e REF \
            ghcr.io/flathub-infra/flatpak-builder-lint:latest \
            /bin/bash -c '
              git config --global --add safe.directory "*"
              just checkout $REPO $REF
            '

      - name: Prepare environment
        run: |
          docker run --rm --privileged \
            --entrypoint="" \
            -v "${GITHUB_WORKSPACE}/work:/work" \
            -w /work \
            ghcr.io/flathub-infra/flatpak-builder-lint:latest \
            just prepare-env

      - name: Validate manifest
        run: |
          docker run --rm --privileged \
            --entrypoint="" \
            -v "${GITHUB_WORKSPACE}/work:/work" \
            -w /work \
            -e APP_ID \
            ghcr.io/flathub-infra/flatpak-builder-lint:latest \
            just validate-manifest $APP_ID

      - name: Build flatpak
        run: |
          docker run --rm --privileged \
            --entrypoint="" \
            -v "${GITHUB_WORKSPACE}/work:/work" \
            -w /work \
            -e APP_ID \
            -e BRANCH \
            ghcr.io/flathub-infra/flatpak-builder-lint:latest \
            just build $APP_ID $BRANCH

      - name: Commit screenshots
        run: |
          docker run --rm --privileged \
            --entrypoint="" \
            -v "${GITHUB_WORKSPACE}/work:/work" \
            -w /work \
            ghcr.io/flathub-infra/flatpak-builder-lint:latest \
            just commit-screenshots

      - name: Validate build
        run: |
          docker run --rm --privileged \
            --entrypoint="" \
            -v "${GITHUB_WORKSPACE}/work:/work" \
            -w /work \
            ghcr.io/flathub-infra/flatpak-builder-lint:latest \
            just validate-build

      - name: Generate deltas
        run: |
          docker run --rm --privileged \
            --entrypoint="" \
            -v "${GITHUB_WORKSPACE}/work:/work" \
            -w /work \
            ghcr.io/flathub-infra/flatpak-builder-lint:latest \
            just generate-deltas

      - name: Upload build
        run: |
          docker run --rm --privileged \
            --entrypoint="" \
            -v "${GITHUB_WORKSPACE}/work:/work" \
            -w /work \
            -e BUILD_URL \
            -e REPO_TOKEN \
            ghcr.io/flathub-infra/flatpak-builder-lint:latest \
            just upload $BUILD_URL
