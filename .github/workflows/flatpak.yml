name: Build flatpak

on:
  workflow_dispatch:
    inputs:
      app_id:
        description: 'Application ID'
        required: true
        default: org.vim.Vim
      branch:
        description: 'Build branch (stable/beta/test)'
        required: true
        default: stable
      ref:
        description: 'Git reference'
        required: true
        default: master
      build_url:
        description: 'Build ID'
        required: true
        default: "0"
  repository_dispatch:
    types: [build-flatpak]

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/flathub-infra/flatpak-builder-lint:latest-amd64
      options: --privileged

    defaults:
      run:
        working-directory: /home/flatbld

    steps:
      - name: Set variables from dispatch event
        if: github.event_name == 'repository_dispatch'
        run: |
          echo "APP_ID=${{ github.event.client_payload.app_id }}" >> $GITHUB_ENV
          echo "BRANCH=${{ github.event.client_payload.branch }}" >> $GITHUB_ENV
          echo "REPO=https://github.com/flathub/${{ github.event.client_payload.app_id }}" >> $GITHUB_ENV
          echo "REF=${{ github.event.client_payload.ref }}" >> $GITHUB_ENV
          echo "BUILD_URL=https://hub.flathub.org/api/v1/build/${{ github.event.client_payload.build_url }}" >> $GITHUB_ENV
          echo "HOME=/home/flatbld" >> $GITHUB_ENV

      - name: Set variables from manual trigger
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "APP_ID=${{ github.event.inputs.app_id }}" >> $GITHUB_ENV
          echo "BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
          echo "REPO=https://github.com/flathub/${{ github.event.inputs.app_id }}" >> $GITHUB_ENV
          echo "REF=${{ github.event.inputs.ref }}" >> $GITHUB_ENV
          echo "BUILD_URL=https://hub.flathub.org/api/v1/build/${{ github.event.inputs.build_url }}" >> $GITHUB_ENV
          echo "HOME=/home/flatbld" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - run: |
          mkdir -p build
          ln -s "$(pwd)/justfile" build/justfile

      - name: Checkout repository
        run: just checkout $REPO $REF
        working-directory: ./build

      - name: Prepare environment
        run: just prepare-env
        working-directory: ./build

      - name: Validate manifest
        run: just validate-manifest $APP_ID
        working-directory: ./build

      - name: Build Flatpak
        run: just build $APP_ID $BRANCH
        working-directory: ./build

      - name: Commit screenshots
        run: just commit-screenshots
        working-directory: ./build

      - name: Validate build
        run: just validate-build
        working-directory: ./build

      - name: Generate deltas
        run: just generate-deltas
        working-directory: ./build

      - name: Upload build
        run: just upload $BUILD_URL
        working-directory: ./build
